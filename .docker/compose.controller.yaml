services:

  ########################## Postgres #########################################
  postgres:
    container_name: postgres
    image: pgvector/pgvector:0.6.1-pg16
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_DB=${POSTGRES_DB:-ai_db}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER} || exit 1']
      interval: 5s
      timeout: 3s
    networks:
      - vrm
  ########################### End Postgres ####################################

  ########################## Pythyon Flask #########################################
  flaskcontainer:
    build:
      context: ../backend
      dockerfile: ../backend/Dockerfile  
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_DB=${POSTGRES_DB:-ai_db}
    ports:
      - "8000:8000"
    depends_on: 
      - postgres
    networks:
      - vrm
  
  ########################## End Pythyon Flask #########################################

  ########################### Networks Definition #############################
networks:
  vrm:
    name: vrm-net
    driver: bridge
  ########################### End Networks Definition #########################

  ########################### Volumes Definition ##############################
volumes:
  pgdata:

  ########################### End Volumes Definition ##########################
