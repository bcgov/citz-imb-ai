name: Sync DBTs to OCP Volume

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '/mlops/orchestration/dbt/**'  # Only trigger when DBT files change

jobs:
  sync-dbts:
    environment: dev
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install `oc`
    - name: Install OpenShift CLI
      run: |
        curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
        tar -xvzf oc.tar.gz
        chmod +x oc
        mkdir -p $HOME/bin
        mv oc $HOME/bin/
        echo "$HOME/bin" >> $GITHUB_PATH

    # Verify `oc`
    - name: Check `oc` version
      run: oc version

    # Login to the Openshift Cluster
    - name: Login to Openshift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
        openshift_token: ${{ secrets.OPENSHIFT_SA_DEV_TOKEN }}
        namespace: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}
        insecure_skip_tls_verify: true

    # Get Generated Pod Name
    - name: Get Pod Name
      run: |
        POD_NAME=$(oc get pods -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} -l role=airflow-scheduler --no-headers -o custom-columns=":metadata.name")
        echo "POD_NAME=$POD_NAME" >> $GITHUB_ENV

    # Sync DBTs to OCP Airflow volume
    - name: Sync DBTs to OCP Volume
      run: |

        oc rsync ./mlops/orchestration/dbt/ ${{ env.POD_NAME }}:/opt/airflow/dbt -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} --delete

    - name: Verify DBT transfer
      run: |
        oc exec ${{ env.POD_NAME }} -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} -- ls -l /opt/airflow/dbt

